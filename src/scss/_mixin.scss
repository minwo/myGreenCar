@charset "UTF-8";

@use 'sass:math'; 

// slide Down && slide Up ( accodion )
@mixin acdo($mh, $mt, $ts, $tcb) {
	visibility:if($mt < 0, hidden, visible);
	max-height:$mh;
	margin-top:$mt;
	transition:all $ts $tcb;
}

// 텍스트 말줄임
@mixin ell($line:1) {
	overflow:hidden;
	text-overflow:ellipsis;
	@if $line > 1 {
		display:-webkit-box;
		-webkit-line-clamp:$line;
		-webkit-box-orient:vertical;
	}@else{
		white-space:nowrap;
	}
}

// icon
@mixin ic($ws, $hs ,$path:null){
    display:inline-block;
    width:$ws;
    height:$hs;
    @if not($path == null or $path == ''){
        $icon-path : $url-ico + $path;
        background-image:url($icon-path);
    }
    background-size:100% 100%;
}

@mixin icType(){
    @each $key, $value in $icon-size {
        &.#{$key}{
            width: map-get($value, "width");
            height: map-get($value, "height");
        }
    }

    @each $key, $file in map-get($icon-size, "file") {
        &.#{$key} {
            background-image: url($url-ico+$file);
        }
    }
}

// button
@mixin buttonType( $border-color, $background-color, $font-color ){
	border-color:$border-color;
	background-color:$background-color;
	color:$font-color;
}

@mixin btnDrt($direction:null){
    @each $key, $value in $btn-size{
        @if ($direction == 'col'){
            &.#{$key}{
                flex-basis: map-get($value, "size");
                font-size: map-get($value, "font-size");
            }
        } @else {
            &.#{$key}{
                height: map-get($value, "size");
                font-size: map-get($value, "font-size");
				@if($key == "xs"){
					border-radius:17px;
				}
            }
        }
    }
}

// checkbook && radio
@mixin form($type) {
	// size
	$checkradio-size:24px;
	display:inline-block;
	vertical-align:top;
	color:$navy-040;
	input {
		display:none;
		position:absolute;
		width:1px;
		height:1px;
		padding:0;
		margin:-1px;
		overflow:hidden;
		clip:rect(0,0,0,0);
		border:0;

		&:checked {
			& ~ span {
				color:$navy-070;
				font-weight:500;
				&:before {
					background-color:$default;
					@if($type =="radio") {
						box-shadow:inset 0 0 0 2px;
						color:#fff;
					}
				}
			}
			&:disabled ~ span {
				&:before {
					background-color:$navy-030;
					color:$navy-020;
				}
			}
		}
		&:disabled ~ span {
			&:before {
				background-color:$navy-020;
			}
		}
	}
	> span {
		position:relative;
		display:inline-flex;
		align-items:center;
		vertical-align:top;
		@include fontSize(14);
		&:before {
			content:'';
			margin-right:8px;
			border-radius:$border-radius-circle;
			box-sizing:border-box;
			@if($type == "radio"){
				width:$checkradio-size - 4px;
				height:$checkradio-size - 4px;
				border:2px solid $navy-020;
			} @else {
				width:$checkradio-size;
				height:$checkradio-size;
				background-color:$navy-020;
				background-size:100% 100%;
				background-image:url(#{$url-common}check.svg);
			}
		}
	}
}

// theme light or theme dark
@mixin gc-theme($name) {
	// [data-theme="#{$name}"] {
	@media (prefers-color-scheme: #{$name}) {
		@content;
	}
}

// Rounded corners
@mixin border-top-radius($radius) {
	border-top-right-radius: $radius;
	 border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
	border-bottom-right-radius: $radius;
	   border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
	border-bottom-right-radius: $radius;
	 border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
	border-bottom-left-radius: $radius;
	   border-top-left-radius: $radius;
}
@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	   -moz-border-radius: $radius;
			border-radius: $radius;

	 -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
    	  background-clip: padding-box;
}

// popup 가로 세로
@mixin popupType() {
	&:not(.type-bottom,.type-full) {
		.bot-btn-fix{
			height:auto;
			.btn-wrap{
				position:static;
				height:auto;
				padding:10px 0 0;
			}
		}
	}

	&.type-bottom{
		// .layer-container{
		// 	// padding-bottom:74px;
		// }
		.bot-btn-fix{
			position:absolute;
			left:0;
			bottom:0;
			width:100%;
			// height:auto;
			height:74px;
			.btn-wrap{
				position:static;
				height:auto;
			}
		}
	}
}

// 텍스트 세로 정렬
@mixin vDom(){
	display:inline-flex;
	justify-items:center;
	align-items:center;
}

// input line
@mixin ipLine(){
	.line{
		position:absolute;
		left:0;
		bottom:0;
		z-index:-1;
		width:100%;
		border-radius: $border-radius;

		// .row.error{
		// 	.ip-txt{
		// 		color: $navy-070;
		// 	}
		// }
	}

	&:not(.box){
		.line{
			height:1px;
			background-color: $navy-020;
			transition: $animation;
			
			&:before{
				display:block;
				width:0;
				height:1px;
				position:absolute;
				left:0;
				bottom:0;
				content:"";
				transition: $animation;
			}
		}

		& .ip-txt:focus ~ .line{
			&:before{
				width:100%;
				background-color:$default;
			}
		}

		& .error{
			.ip-txt{
				color: $red-060;
			}
			.ip-txt ~ .line{
				&:before{
					width:100%;
					background-color: $red-060;
				}
			}
		}

	}
	
	&.box{
		.line{
			border:1px solid $navy-020;
			height:100%;
			transition: $animation;
		}

		.ip-txt{
			padding:0 20px 0 20px;

			&:focus ~ .line{
				border-color:$default;
			}
		}

		.icon-group{
			right:17px;
		}

		& .error{
			.ip-txt ~ .line{
				border-color: $red-060;
			}
		}
		
	}
}

// border
/*
	ex
	@include border('t');
	@include border('t',4);
	방향,픽셀
*/
@mixin border($direction:null,$size:null){
	$size:if($size == null,1,$size);

	@if($direction == 't'){
		border-top:#{$size}px solid $navy-020;
	} @else if($direction == 'b'){
		border-bottom:#{$size}px solid $navy-020;
	} @else{
		border:#{$size}px solid  $navy-020;
	}
}

// font-style-guide
@mixin fontSize($size, $weight:null, $priority:null){
	font-size:#{$size}px $priority;
	@if not($weight == null or $weight =='') {
		font-weight:$weight;
	}
	line-height:map-get($lineHeight, #{$size}, "line-height");
}